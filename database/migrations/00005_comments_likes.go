package migrations

type CommentsLikes struct{}

func (*CommentsLikes) up() []string {
	return []string{
		`CREATE TABLE IF NOT EXISTS comments_likes (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            is_like BOOLEAN NOT NULL DEFAULT TRUE,
            user_id BIGINT NOT NULL,
            comment_id BIGINT NOT NULL,
            created_at TIMESTAMP NOT NULL DEFAULT (now() at time zone 'utc'),
            FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
            FOREIGN KEY (comment_id) REFERENCES comments (id) ON DELETE CASCADE,
            UNIQUE (user_id,comment_id)
        );`, `
        CREATE OR REPLACE FUNCTION getUserlikeOnComment(userId BIGINT,commentId BIGINT) RETURNS INT 
        AS $$ 
        DECLARE userLike INT; 
        BEGIN 
            SELECT is_like::INT INTO userLike FROM comments_likes WHERE comments_likes.comment_id=commentId AND comments_likes.user_id=userId; 
            RETURN COALESCE(userLike,2); 
        END; 
        $$ LANGUAGE PLPGSQL;`,
	}
}

func (*CommentsLikes) down() []string {
	return []string{
		`DROP FUNCTION IF EXISTS getUserlikeOnComment;`,
		`DROP TABLE IF EXISTS comments_likes;`,
	}
}

func (*CommentsLikes) tableName() string {
	return "comments_likes"
}
